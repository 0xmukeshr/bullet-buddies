/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  OneVsOneBlackRoom,
  OneVsOneBlackRoomInterface,
} from "../OneVsOneBlackRoom";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "enemy",
        type: "address",
      },
    ],
    name: "EnemyKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "enemy",
        type: "address",
      },
    ],
    name: "EnemySpawned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerKilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerSpawned",
    type: "event",
  },
  {
    inputs: [],
    name: "checkStatus",
    outputs: [
      {
        internalType: "bool",
        name: "playerStatus",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "enemyStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enemy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enemyAlive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enemyWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gamesPlayed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameStats",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pWins",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eWins",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isGameOver",
    outputs: [
      {
        internalType: "bool",
        name: "isOver",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "killEnemy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "killPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "player",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playerAlive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playerWins",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_enemy",
        type: "address",
      },
    ],
    name: "spawnEnemy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spawnPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610754806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c39b7ee11610097578063df29e5c911610066578063df29e5c9146101f4578063e819f06014610208578063f139cdd61461021c578063f64ff4a51461022457600080fd5b80636c39b7ee146101c4578063886bc700146101db578063ba7833cd146101e4578063bb472219146101ec57600080fd5b80633b7104f2116100d35780633b7104f21461016657806340c589981461019457806348db5f89146101a95780634fc35050146101bc57600080fd5b80630e04a7d8146100fa578063185f2e41146101175780631aff30dd14610142575b600080fd5b61010261022d565b60405190151581526020015b60405180910390f35b60015461012a906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b6002546003546004546040805193845260208401929092529082015260600161010e565b60015460ff600160a01b8204811691600160a81b90041660408051921515835290151560208301520161010e565b6101a76101a23660046106c7565b610258565b005b60005461012a906001600160a01b031681565b6101a761036b565b6101cd60025481565b60405190815260200161010e565b6101cd60045481565b6101a761040a565b6101a7610510565b60015461010290600160a01b900460ff1681565b60015461010290600160a81b900460ff1681565b6101a76105c1565b6101cd60035481565b600154600090600160a01b900460ff1615806102535750600154600160a81b900460ff16155b905090565b6001600160a01b0381166102ab5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420656e656d79206164647265737360581b60448201526064015b60405180910390fd5b6000546001600160a01b03908116908216036103145760405162461bcd60e51b815260206004820152602260248201527f456e656d792063616e6e6f74206265207468652073616d6520617320706c617960448201526132b960f11b60648201526084016102a2565b60018054600161ff0160a01b0319166001600160a01b0380841691909117600160a81b17918290556040519116907fc429c664ed3e9185ee90e735afd83d74b33b130bb94a776dc5ef44230515cf3690600090a250565b6000546001600160a01b0316156103b95760405162461bcd60e51b8152602060048201526012602482015271141b185e595c88185b1c9958591e481cd95d60721b60448201526064016102a2565b600080546001600160a01b0319163390811782556001805460ff60a01b1916600160a01b17905560405190917f3c6aeaaf581e0de5092f249f883aa4b952c106d8fb00afe6acf5091f0c268a7e91a2565b6001546001600160a01b03166104515760405162461bcd60e51b815260206004820152600c60248201526b139bc8195b995b5e481cd95d60a21b60448201526064016102a2565b600154600160a81b900460ff1661049f5760405162461bcd60e51b8152602060048201526012602482015271115b995b5e48185b1c9958591e481919585960721b60448201526064016102a2565b6001805460ff60a81b19169055600380549060006104bc836106f7565b9091555050600280549060006104d1836106f7565b90915550506001546040516001600160a01b03909116907fc234a278a1ce4f65e03df5c0ced92ed8e69190f5773df56026f4acbe81af42ae90600090a2565b600154600160a01b900460ff1615806105335750600154600160a81b900460ff16155b6105785760405162461bcd60e51b815260206004820152601660248201527547616d65207374696c6c20696e2070726f677265737360501b60448201526064016102a2565b600080546001600160a01b0319168155600180546001600160b01b03191690556040517fc6976b6410888b44c765590c8368eb4a60e0431d4ad683c8a53ea85a8479f22e9190a1565b6000546001600160a01b03166106095760405162461bcd60e51b815260206004820152600d60248201526c139bc81c1b185e595c881cd95d609a1b60448201526064016102a2565b600154600160a01b900460ff166106585760405162461bcd60e51b8152602060048201526013602482015272141b185e595c88185b1c9958591e4819195859606a1b60448201526064016102a2565b6001805460ff60a01b1916905560048054906000610675836106f7565b90915550506002805490600061068a836106f7565b9091555050600080546040516001600160a01b03909116917fead27810900dffc10f8eaf4d55f4185f6a0d506f3e6ba0197bfdabd5b455106091a2565b6000602082840312156106d957600080fd5b81356001600160a01b03811681146106f057600080fd5b9392505050565b60006001820161071757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220246526e1c71a6dd8f9c221835d4c926a50d4f178098a0e36760c5d7d5817392964736f6c63430008130033";

type OneVsOneBlackRoomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OneVsOneBlackRoomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OneVsOneBlackRoom__factory extends ContractFactory {
  constructor(...args: OneVsOneBlackRoomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OneVsOneBlackRoom & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OneVsOneBlackRoom__factory {
    return super.connect(runner) as OneVsOneBlackRoom__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OneVsOneBlackRoomInterface {
    return new Interface(_abi) as OneVsOneBlackRoomInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OneVsOneBlackRoom {
    return new Contract(address, _abi, runner) as unknown as OneVsOneBlackRoom;
  }
}
